{"version":3,"sources":["pages/homepage/style.js","pages/homepage/index.js","pages/signup/style.js","pages/signup/index.js","routes.js","App.js","serviceWorker.js","index.js"],"names":["HomeWrapper","styled","div","Welcome","SignInWrapper","WelcomeTitle","h1","SignInForn","form","FormIcon","FormTitle","h3","Input","input","Checkbox","ButtonInput","button","Copyright","p","useState","email","changeEmail","className","style","color","fontSize","placeholder","onChange","event","target","value","console","log","fontFamily","type","href","to","SignUpWrapper","SmallInput","firstName","typeFirstName","display","width","margin","padding","textAlign","marginLeft","routes","path","component","exact","App","map","route","key","toString","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.6d87da8d.chunk.js","sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const HomeWrapper = styled.div`\r\n   width: 70%;\r\n   height: 600px;\r\n   margin: 0 auto;\r\n   background-color: #004080;\r\n   display: flex;\r\n   border-radius: 35px;\r\n   box-shadow: 5px 5px 10px  #001a33;\r\n`;\r\n\r\nexport const Welcome = styled.div`\r\n   width: 60%;\r\n   background-color: red;\r\n   border-bottom-left-radius: 35px;\r\n   border-top-left-radius: 35px;\r\n   background: url('https://cdn.pixabay.com/photo/2018/08/17/21/11/night-3613835_1280.jpg') no-repeat;\r\n   background-size: cover;\r\n   padding-left: 50px;\r\n`;\r\n\r\nexport const SignInWrapper = styled.div`\r\n   width: 40%;\r\n   padding: 90px 0;\r\n`;\r\n\r\nexport const WelcomeTitle = styled.h1`\r\n   font-size: 100px;\r\n   color: #000d1a;\r\n   text-shadow: 5px 5px 5px;\r\n`;\r\n\r\nexport const SignInForn = styled.form`\r\n   width: 80%;\r\n   margin: 0 auto;\r\n   \r\n   \r\n`;\r\n\r\nexport const FormIcon = styled.div`\r\n  width: 10%;\r\n  margin: 0 auto;\r\n  background-color: pink;\r\n  display: flex;\r\n  justify-content: center;\r\n  padding: 10px 5px;\r\n  border-radius: 50%;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: bold;\r\n  color: white;\r\n`;\r\n\r\nexport const FormTitle = styled.h3`\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: bold;\r\n  color: white;\r\n  text-align: center;\r\n  margin-top: 5px;\r\n`;\r\n\r\nexport const Input = styled.input`\r\n  width: 80%;\r\n  display: flex;\r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  background: transparent;\r\n  border: 1px solid silver;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: bold;\r\n  color: white;\r\n  border-radius: 5px;\r\n  margin-bottom: 15px;\r\n`;\r\n\r\nexport const Checkbox = styled.input`\r\n margin-left: 30px;\r\n`;\r\n\r\nexport const ButtonInput = styled.button`\r\n font-family: 'Roboto', sans-serif;\r\n  font-weight: bold;\r\n  color: #00091a;\r\n  background-color: #ccddff;\r\n  border: none;\r\n  border-radius: 5px;\r\n  display: flex;\r\n  margin: 0 auto;\r\n  width: 85%;\r\n  padding: 10px;\r\n  text-align: center;\r\n  margin-top: 15px;\r\n  justify-content: center;\r\n  text-transform: uppercase;\r\n  font-size: 13px;\r\n  &:hover {\r\n   background-color: #b3ccff;\r\n   transform: scale(1.02);\r\n   transition: all 0.3s;\r\n   cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const Copyright = styled.p`\r\n  width: 60%;\r\n  margin: 0 auto;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: bold;\r\n  font-size: 12px;\r\n  color:#00091a ;\r\n  margin-top: 30px;\r\n  text-align: center;\r\n`;","import React, { useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './style.css';\r\nimport { HomeWrapper, Welcome, SignInWrapper,\r\n     WelcomeTitle , SignInForn, FormIcon,\r\n     FormTitle, Input, Checkbox,\r\n     ButtonInput, Copyright} from './style.js'\r\n\r\nexport default () => {\r\n   const [email, changeEmail] = useState('');\r\n   const handleEmail = (event) => {\r\n    changeEmail(event.target.value);\r\n    console.log(email);\r\n   }\r\n   return(\r\n       <HomeWrapper>\r\n         <Welcome>\r\n             <WelcomeTitle>\r\n                 Welcome\r\n             </WelcomeTitle>\r\n         </Welcome>\r\n         <SignInWrapper>\r\n             <SignInForn>\r\n                 <div>\r\n                  <FormIcon>\r\n                    <i className=\"fas fa-lock\" style={{color: 'white', fontSize: '20px'}}></i>\r\n                  </FormIcon>\r\n                 </div>\r\n                 <FormTitle>Sign in</FormTitle>\r\n                 <Input placeholder=\"Email Address *\" onChange={handleEmail}/>\r\n                 <Input placeholder=\"Password *\"/>\r\n                 <label style={{color: 'white', fontFamily: \"'Roboto', sans-serif\", fontSize: '13px'}}>\r\n                 <Checkbox type=\"checkbox\"/>\r\n                 Remember me\r\n                 </label>\r\n                 <ButtonInput>Sign in</ButtonInput>\r\n                 <div className=\"textWrapper\">\r\n                     <div><a className='link' href=\"#\">Forgot password?</a></div>\r\n                     <div>\r\n                         <Link to=\"/styledcomponent/signup\" className=\"link\">Sign Up</Link>\r\n                     </div>\r\n                 </div>\r\n                 <Copyright>Copyright. Your website 2020.</Copyright>\r\n             </SignInForn>\r\n         </SignInWrapper>\r\n       </HomeWrapper>\r\n   )\r\n}\r\n","import styled from \"styled-components\";\r\n\r\nexport const SignUpWrapper = styled.div`\r\n  width: 30%;\r\n  margin: 0 auto;\r\n  height: 520px;\r\n  background-color: #004080;\r\n  border-radius: 30px;\r\n  padding-top: 60px;\r\n`;\r\n\r\nexport const SmallInput = styled.input`\r\n  width: 30%;\r\n  \r\n  margin: 0 auto;\r\n  padding: 10px;\r\n  background: transparent;\r\n  border: 1px solid silver;\r\n  font-family: 'Roboto', sans-serif;\r\n  font-weight: bold;\r\n  color: white;\r\n  border-radius: 5px;\r\n  margin-bottom: 15px;\r\n`;","import React, {useState} from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport '../homepage/style.css'\r\nimport { SignUpWrapper, SmallInput } from './style.js';\r\nimport { SignInForn, FormIcon, FormTitle, \r\n    Input, Checkbox, ButtonInput,\r\n    Copyright } from '../homepage/style.js'\r\n\r\nexport default () => {\r\n    const [firstName, typeFirstName] = useState('');\r\n    const handleFirstName = (event) => {\r\n        typeFirstName(event.target.value);\r\n        console.log(firstName)\r\n    }\r\n    return (\r\n        <SignUpWrapper>\r\n            <SignInForn>\r\n              <FormIcon>\r\n                <i className=\"fas fa-lock\" style={{color: 'white', fontSize: '20px'}}></i>\r\n              </FormIcon>\r\n              <FormTitle>Sign up</FormTitle>\r\n              <div style={{display: 'flex', }}>\r\n                <SmallInput placeholder=\"First Name *\" onChange={handleFirstName}/>\r\n                <SmallInput placeholder=\"Last Name *\"/>\r\n              </div>\r\n              <Input placeholder=\"Email Address *\"/>\r\n                 <Input placeholder=\"Password *\"/>\r\n                    <div style={{width: '90%', margin: '0 auto', padding: '0 30px'}}>\r\n                        <label style={{color: 'white', fontFamily: \"'Roboto', sans-serif\", fontSize: '13px', textAlign: 'center'}}>\r\n                           <Checkbox type=\"checkbox\" style={{marginLeft: 0}}/>\r\n                            I want to receive inspiration, marketing promotions  and updates via email\r\n                        </label>\r\n                    </div>\r\n                    <ButtonInput>Sign Up</ButtonInput>\r\n                    <div className=\"textWrapper\">\r\n                     <div><a className='link' href=\"#\">Already have an accout?</a></div>\r\n                     <div><Link to=\"/styledcomponent/\" className=\"link\">Sign In</Link></div>\r\n                    </div>\r\n                 <Copyright>Copyright. Your website 2020.</Copyright>\r\n            </SignInForn>\r\n        </SignUpWrapper>\r\n    )\r\n}","import React from 'react'\r\n\r\n\r\nimport Home from './pages/homepage';\r\nimport SignUp from './pages/signup';\r\n\r\n\r\n\r\nexport const routes = [\r\n    /*{\r\n        path: \"/routing/photos\",\r\n        component: <Photos/>\r\n    },*/\r\n   \r\n    {\r\n        path: \"/styledcomponent/\",\r\n        component: <Home/>, \r\n        exact: true\r\n    },\r\n    {\r\n        path: \"/styledcomponent/signup\",\r\n        component: <SignUp/>\r\n    },\r\n    {\r\n        path: '*',\r\n        component: () => ( <div>page not found 404</div>)\r\n    },\r\n   \r\n]","import React from \"react\";\nimport './App.css';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route\n \n} from \"react-router-dom\";\nimport {routes} from './routes.js'\n\nexport default function App() {\n  return (\n    <Router>\n      <div className='main'>\n       <Switch> \n        {\n          routes.map(route => (\n            <Route exact={route.exact} path={route.path} key={route.toString()}>\n            {route.component}\n          </Route>\n          ))\n        }\n       </Switch>\n      </div>\n    </Router>\n  );\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}